library(ggplot2)
library(dplyr)
df = read.csv("../data/covertype.csv",
sep = ",")
df = read.csv('~/Downloads/covtypes.csv')
df = read.csv('~/Downloads/covtype.csv')
head(df)
str(df)
source("~/Documents/GitHub/ADS-503-Predicting-Forest-Cover-Type/Untitled.Rmd")
source("~/Documents/GitHub/ADS-503-Predicting-Forest-Cover-Type/EDA_cov.Rmd")
# distribution of elevation
ggplot(data = df, aes(x = Elevation)) +
geom_histogram()
# distribution of elevation
ggplot(data = df, aes(x = Elevation)) +
geom_histogram(bins = 20)
# distribution of elevation
ggplot(data = df, aes(x = Elevation)) +
geom_histogram(bins = 5)
# distribution of elevation
ggplot(data = df, aes(x = Elevation)) +
geom_histogram(bins = 50)
# elevation based on cover type
ggplot(data = df, aes(x=Cover_Type, y=Elevation, fill=Cover_Type)) +
geom_boxplot(notch=TRUE, outlier.colour=6, outlier.shape=16,
outlier.size=3 ) +
geom_jitter(size=0.3, width=0.1)
# elevation based on cover type
ggplot(data = df, aes(x=Cover_Type, y=Elevation)) +
geom_boxplot(notch=TRUE, outlier.colour=6, outlier.shape=16,
outlier.size=3 ) +
geom_jitter(size=0.3, width=0.1)
# elevation based on cover type
ggplot(data = df, aes(x=Elevation, y=Cover_Type)) +
geom_boxplot(notch=TRUE, outlier.colour=6, outlier.shape=16,
outlier.size=3 ) +
geom_jitter(size=0.3, width=0.1)
# elevation based on cover type
ggplot(data = df, aes(x=Elevation, y=Cover_Type)) +
geom_boxplot(notch=FALSE, outlier.colour=6, outlier.shape=16,
outlier.size=3 ) +
geom_jitter(size=0.3, width=0.1)
# check cover_type
# check cover_type
ggplot(data = df, aes(x = Elevation, fill = Cover_Type)) +
geom_histogram(bins = 50)
# check cover_type
ggplot(data = df, aes(x = Elevation, fill = Cover_Type)) +
geom_density(alpha = 0.25, color = 'black')
# distance
ggplot(data = df, aes(x = Horizontal_Distance_To_Hydrology)) +
geom_histogram()
# distance
ggplot(data = df, aes(x = Horizontal_Distance_To_Hydrology)) +
geom_histogram(bins = 30)
# distance vs cover_type
ggplot(data = df, aes(x = Cover_Type, y = Horizontal_Distance_To_Hydrology)) +
geom_boxplot() +
stat_summary(fun = 'mean', color = 'red', 'point')
# distance vs cover_type
ggplot(data = df, aes(x = Cover_Type, y = Elevation)) +
geom_boxplot() +
stat_summary(fun = 'mean', color = 'red', 'point')
# distance vs cover_type
ggplot(data = df, aes(x = Cover_Type, y = Elevation, fill = Cover_Type)) +
geom_boxplot() +
stat_summary(fun = 'mean', color = 'red', 'point')
ggplot(data = df, aes(x = Cover_Type)) +
geom_boxplot()
# check cover_types
ggplot(data = df, aes(x = Cover_Type)) +
geom_bar()
# check cover_types
ggplot(data = df, aes(x = Cover_Type)) +
geom_bar() +
labs(title = 'Cover Types Class Balance')
# check cover_types
ggplot(data = df, aes(x = Cover_Type), color = 'blue') +
geom_bar() +
labs(title = 'Cover Types Class Balance')
# check cover_types
ggplot(data = df, aes(x = Cover_Type)) +
geom_bar(color = 'blue') +
labs(title = 'Cover Types Class Balance')
# check cover_types
ggplot(data = df, aes(x = Cover_Type)) +
geom_bar(fill=Cover_Type) +
labs(title = 'Cover Types Class Balance')
# check cover_types
ggplot(data = df, aes(x = Cover_Type)) +
geom_bar(fill=Cover_Type) +
labs(title = 'Cover Types Class Balance')
# check cover_types
ggplot(data = df, aes(x = Cover_Type)) +
geom_bar() +
labs(title = 'Cover Types Class Balance')
source("~/Documents/GitHub/ADS-503-Predicting-Forest-Cover-Type/EDA_cov.Rmd")
# check cover_types
ggplot(data = df, aes(x = Cover_Type, fill = 'cover_Type')) +
geom_bar() +
labs(title = 'Cover Types Class Balance')
# check cover_types
ggplot(data = df, aes(x = Cover_Type, fill = 'Cover_Type')) +
geom_bar() +
labs(title = 'Cover Types Class Balance')
# check cover_types
ggplot(data = df, aes(x = Cover_Type, fill = Cover_Type)) +
geom_bar() +
labs(title = 'Cover Types Class Balance')
# check cover_types
ggplot(data = df, aes(x = Cover_Type)) +
geom_bar(fill = Cover_Type) +
labs(title = 'Cover Types Class Balance')
# check cover_types
ggplot(data = df, aes(x = Cover_Type, fill = Cover_Type)) +
geom_bar(stat = 'identity') +
labs(title = 'Cover Types Class Balance')
# check cover_types
ggplot(data = df, aes(x = Cover_Type, color = Cover_Type)) +
geom_bar() +
labs(title = 'Cover Types Class Balance')
# check cover_types
ggplot(data = df, aes(x = Cover_Type)) +
geom_bar(color = Cover_Type) +
labs(title = 'Cover Types Class Balance')
# check cover_types
ggplot(data = df, aes(x = Cover_Type)) +
geom_bar() +
labs(title = 'Cover Types Class Balance')
# check cover_types
ggplot(data = df, aes(x = Cover_Type, fill = Cover_Type)) +
geom_bar() +
scale_fill_manual(values = c('#9933FF',
'#33FFFF',
'red',
'darkblue',
'green',
'orange',
'yellow')) +
labs(title = 'Cover Types Class Balance')
# check cover_types
ggplot(data = df, aes(x = Cover_Type, fill = Cover_Type)) +
geom_bar(stat = 'identity') +
scale_fill_manual(values = c('#9933FF',
'#33FFFF',
'red',
'darkblue',
'green',
'orange',
'yellow')) +
labs(title = 'Cover Types Class Balance')
# check cover_types
ggplot(data = df, aes(x = Cover_Type, fill = Cover_Type)) +
geom_bar() +
scale_fill_manual(values = c('#9933FF',
'#33FFFF',
'red',
'darkblue',
'green',
'orange',
'yellow')) +
labs(title = 'Cover Types Class Balance')
# check cover_types
class_bal <- ggplot(data = df, aes(x = Cover_Type, fill = Cover_Type)) +
geom_bar() +
scale_fill_manual(values = c('#9933FF',
'#33FFFF',
'red',
'darkblue',
'green',
'orange',
'yellow')) +
labs(title = 'Cover Types Class Balance')
class_bal
# check cover_types
ggplot(data = df, aes(x = Cover_Type, fill = Cover_Type)) +
geom_bar() +
scale_fill_manual(values = c('#9933FF',
'#33FFFF',
'red',
'darkblue',
'green',
'orange',
'yellow')) +
labs(title = 'Cover Types Class Balance')
# check cover_types
ggplot(data = df, aes(x = Cover_Type, fill = Cover_Type)) +
geom_bar() +
scale_fill_grey() +
labs(title = 'Cover Types Class Balance')
# check cover_types
ggplot(data = df, aes(x = Cover_Type)) +
geom_bar() +
scale_fill_grey() +
labs(title = 'Cover Types Class Balance')
# check cover_types
ggplot(data = df, aes(x = Cover_Type)) +
geom_bar(fill = Cover_Type) +
scale_fill_grey() +
labs(title = 'Cover Types Class Balance')
# check cover_types
ggplot(data = df, aes(x = Cover_Type)) +
geom_bar() +
labs(title = 'Cover Types Class Balance')
source("~/Documents/GitHub/ADS-503-Predicting-Forest-Cover-Type/EDA_cov.Rmd")
# plot elevation vs covertype
ggplot(data = df, aes(x = elevation, y = slope)) +
geom_point()
# plot elevation vs covertype
ggplot(data = df, aes(x = Elevation, y = Slope)) +
geom_point()
# plot elevation vs covertype
ggplot(data = df, aes(x = Elevation, y = Cover_Type)) +
geom_point()
# plot elevation vs covertype
ggplot(data = df, aes(x = Cover_Type, y = Elevation)) +
geom_point()
# plot elevation vs covertype
ggplot(data = df, aes(x = Cover_Type, y = Elevation, fill = Cover_Type)) +
geom_point()
# plot elevation vs covertype
ggplot(data = df, aes(x = Cover_Type, y = Elevation, fill = Cover_Type)) +
geom_point(stat = 'identity')
# plot elevation vs covertype
ggplot(data = df, aes(x = Cover_Type, y = Elevation)) +
geom_point(fill = Cover_Type)
# plot elevation vs covertype
ggplot(data = df, aes(x = Cover_Type, y = Elevation)) +
geom_point()
#
ggplot(data = df, aes(x = Cover_Type, y = Slope)) +
geom_point()
# plot elevation vs covertype
ggplot(data = df, aes(x = Cover_Type, y = Elevation)) +
geom_point() +
labels(title = 'Elevation Vs. Cover Types')
# plot elevation vs covertype
ggplot(data = df, aes(x = Cover_Type, y = Elevation)) +
geom_point() +
labs(title = 'Elevation Vs. Cover Types')
# plot elevation vs covertype
ggplot(data = df, aes(x = Cover_Type, y = Elevation)) +
geom_boxplot() +
labs(title = 'Elevation Vs. Cover Types')
source("~/Documents/GitHub/ADS-503-Predicting-Forest-Cover-Type/EDA_cov.Rmd")
install.packages('klaR')
# load libraries and packages
library(tidyverse)
#install.packages('klaR')
library(klaR)
# build data frame
ID <- c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13)
Ss-In <- c(168, 156, 176, 256, 230, 116, 242, 242, 174, 1004, 1228, 964, 2008)
# build data frame
ID <- c(1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13)
Ss_In <- c(168, 156, 176, 256, 230, 116, 242, 242, 174, 1004, 1228, 964, 2008)
Sed_In <- c(3, 3, 3.5, 3, 5, 3, 7, 4.5, 2.5, 35, 46, 17, 32)
Cond_In <- c(1814, 1358, 2200, 2070, 1410, 1238, 1315, 1183, 1110, 1218, 1889,
2120, 1257)
Ss_Out <- c(15, 14, 16, 27, 131, 104, 104, 78, 73, 81, 82.4, 20, 13)
Sed_Out <- c(0.001, 0.01, 0.005, 0.2, 3.5, 0.06, 0.01, 0.02, 1.5, 1172, 1932,
1030, 1038)
Cond_Out <- c(1879, 1425, 2140, 2700, 1575, 1221, 1434, 1374, 1256, 33.3, 43.1,
1966, 1289)
Status <- as.factor(c('ok', 'ok', 'ok', 'ok', 'settler', 'settler',
'settler', 'settler', 'settler',
'solids', 'solids', 'solids', 'solids'))
# concat into DF
water_treament <- data.frame(ID, Ss_In, Sed_In, Cond_In, Ss_Out, Sed_Out, Cond_Out, Status)
# concat into DF
water_treament <- data.frame(ID, Ss_In, Sed_In, Cond_In, Ss_Out, Sed_Out, Cond_Out, Status)
water_treament
# run bayes naiive model
nBayes <- NaiveBayes(data = water_treament,
usekernel = TRUE,
fL = 3)
# run bayes naiive model
nBayes <- NaiveBayes(Status ~.,
data = water_treament,
usekernel = TRUE,
fL = 3)
# concat into DF
water_treament <- data.frame(Ss_In, Sed_In, Cond_In, Ss_Out, Sed_Out, Cond_Out, Status)
water_treament
# run bayes naiive model
nBayes <- NaiveBayes(Status ~.,
data = water_treament,
usekernel = TRUE,
fL = 3)
# run prediction
predict_data <- c(222, 4.5, 1518, 74, 0.25, 1642)
predict_query <- predict(nBayes, predict_data)
library(e1071)
setosa <- as.factor(iris$Species == "setosa")
iris2 = scale(iris[,-5])
m <- svm(setosa ~ Petal.Width + Petal.Length,
data = iris2, kernel = "linear")
m
# add statistics here
summary(df)
library(ggplot2)
library(dplyr)
library(corrplot)
# correlation heatmap
corrplot(df)
# correlation heatmap
corrplot(as.matrix(df))
library(ggplot2)
library(dplyr)
library(corrplot)
df = read.csv('~/Downloads/covtype.csv')
head(df)
# add statistics here
summary(df)
# distribution of elevation
ggplot(data = df, aes(x = Elevation)) +
geom_histogram(bins = 50)
# distance
ggplot(data = df, aes(x = Horizontal_Distance_To_Hydrology)) +
geom_histogram(bins = 30)
# check cover_types
ggplot(data = df, aes(x = Cover_Type)) +
geom_bar() +
labs(title = 'Cover Types Class Balance')
# plot elevation vs covertype
ggplot(data = df, aes(x = Cover_Type, y = Elevation)) +
geom_point() +
labs(title = 'Elevation Vs. Cover Types')
#
ggplot(data = df, aes(x = Cover_Type, y = Slope)) +
geom_point()
# contingeny table
# correlation heatmap
heatmap(df)
source("~/Documents/GitHub/ADS-503-Predicting-Forest-Cover-Type/EDA_cov.Rmd")
# correlation heatmap
heatmap(df)
# correlation heatmap
corrplot(df)
# correlation heatmap
cor(df)
# contingeny table
# cover types based on slope
# explain the meaning of slope
table(df$Slope, df$Cover_Type)
# contingeny table
# cover types based on slope
# explain the meaning of slope
#table(df$Slope, df$Cover_Type)
source("~/Documents/GitHub/ADS-503-Predicting-Forest-Cover-Type/EDA_cov.Rmd")
source("~/Documents/GitHub/ADS-503-Predicting-Forest-Cover-Type/EDA_cov.Rmd")
library(ggplot2)
library(dplyr)
library(corrplot)
library(caret)
# check for degenreate distributions
zero_var <- nearZeroVar(df)
# check for degenreate distributions
zero_var <- nearZeroVar(df)
# check for degenreate distributions
zero_var <- nearZeroVar(df)
```
source("~/Documents/GitHub/ADS-503-Predicting-Forest-Cover-Type/EDA_cov.Rmd")
